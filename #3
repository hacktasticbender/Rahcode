#include<stdio.h> 
#include<netinet/in.h> 
#include<netdb.h> 
#include<arpa/inet.h> 
#include<unistd.h> 
//Define server port  
#define SERV_TCP_PORT 5035 
int main(int argc,char**argv) 
{ 
  //variable declaration 
       int sockfd,newsockfd; 
       socklen_t clength; 
       struct sockaddr_in serv_addr,cli_addr; 
       char buffer[4096]; 
 
   // create socket  
       sockfd=socket(AF_INET,SOCK_STREAM,0); 
   
   //Initialize server addres structure 
       serv_addr.sin_family=AF_INET; 
       serv_addr.sin_addr.s_addr=INADDR_ANY; 
       serv_addr.sin_port=htons(SERV_TCP_PORT); 
 
       printf("\nStart"); 
 // bind socket  
       bind(sockfd,(struct sockaddr*)&serv_addr,sizeof(serv_addr)); 
       printf("\nListening..."); 
       printf("\n"); 
//Listen incoming connection  
       listen(sockfd,5); 
 
// accept connection from client  
       clength=sizeof(cli_addr); 
       newsockfd=accept(sockfd,(struct sockaddr*)&cli_addr,&clength); 
       printf("\nConnection Accepted"); 
       printf("\n"); 
//Read client message  
       read(newsockfd,buffer,4096); 
       printf("\nClient message:%s",buffer); 
//echo back to client 
       write(newsockfd,buffer,4096); 
       printf("\n"); 
//close sockets  
       close(sockfd); 
       close(newsockfd); 
       return 0;
}

#include<stdio.h> 
#include<sys/types.h> 
#include<sys/socket.h> 
#include<netinet/in.h> 
#include<netdb.h> 
#include<unistd.h> 
#include<arpa/inet.h> 
#define SERV_TCP_PORT 5035 
int main(int argc,char*argv[]) 
{ 
       int sockfd; 
       struct sockaddr_in serv_addr; 
       struct hostent *server; 
       char buffer[4096]; 
 
       sockfd=socket(AF_INET,SOCK_STREAM,0); 
       serv_addr.sin_family=AF_INET; 
       serv_addr.sin_addr.s_addr=inet_addr("127.0.0.1"); 
       serv_addr.sin_port=htons(SERV_TCP_PORT); 
 
       printf("\nReady for sending..."); 
       connect(sockfd,(struct sockaddr*)&serv_addr,sizeof(serv_addr)); 
       printf("\nEnter the message to send\n"); 
       printf("\nClient: "); 
       fgets(buffer,4096,stdin); 
 
       write(sockfd,buffer,4096); 
       printf("Serverecho:%s",buffer); 
       printf("\n"); 
       close(sockfd); 
       return 0; 
} 
